1.How many seconds are in an hour? Use the interactive interpreter as a calculator and multiply the
number of seconds in a minute (60) by the number of minutes in an hour (also 60).
ANS. 60 * 60 = 3600 
2. Assign the result from the previous task (seconds in an hour) to a variable called
seconds_per_hour.
ANS:- seconds_per_hour = 3600

3. How many seconds do you think there are in a day? Make use of the variables seconds per hour
and minutes per hour.
ANs:- seconds_per_day = seconds_per_hour *24
        = 86400

4. Calculate seconds per day again, but this time save the result in a variable called seconds_per_day
ANS:- seconds_per_day = seconds_per_hour *24
      seconds_per_day
      86400
5. Divide seconds_per_day by seconds_per_hour. Use floating-point (/) division.
ANS:- seconds_per_day / seconds_per_hour
        24.0

6. Divide seconds_per_day by seconds_per_hour, using integer (//) division. Did this number agree
with the floating-point value from the previous question, aside from the final .0?
ANS:- Yes agree with the statement. Since seconds_per_day // seconds_per_hour == 24

7. Write a generator, genPrimes, that returns the sequence of prime numbers on successive calls to
its next() method: 2, 3, 5, 7, 11, ...
ANS:- def genPrimes():
        l_prime = []   
        c = 1      
        while True:
            c = c + 1
            for prime in l_prime:
                if c % prime == 0:
                    break
            else:
                l_prime.append(c)
                yield c
prime = genPrimes()
next(prime)